{"version":3,"file":"static/js/830.bba46bf1.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/Forma/Form.module.css?2b94","components/Forma/Form.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Form_title__1DNvX\",\"contactsForm\":\"Form_contactsForm__DjzTl\",\"contactData\":\"Form_contactData__Bfbkh\",\"inputData\":\"Form_inputData__NeNcx\",\"addBtn\":\"Form_addBtn__6Ziaw\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getVisibleContacts } from 'redux/contacts/selectors';\nimport 'boxicons';\nimport { nanoid } from 'nanoid';\nimport css from './Form.module.css';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isContactExists = contacts.find(\n      element => element.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isContactExists) {\n      alert(`${name} is already in contacts!`);\n      setName('');\n      setNumber('');\n      return;\n    } else {\n      dispatch(addContact({ id: nanoid(), name, number }));\n      setName('');\n      setNumber('');\n    }\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      <h1 className={css.title}>Phonebook</h1>\n      <form\n        id=\"contactForm\"\n        className={css.contactsForm}\n        onSubmit={handleSubmit}\n      >\n        <label className={css.contactData}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className={css.inputData}\n            placeholder=\"Name\"\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={css.contactData}>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            className={css.inputData}\n            placeholder=\"Number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={css.addBtn}>\n          Add contact <box-icon type=\"solid\" name=\"user-plus\"></box-icon>\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"labelName\":\"Filter_labelName__JvZcc\",\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    dispatch(changeFilter(e.target.value.toLowerCase()));\n  };\n\n  return (\n    <label className={css.labelName}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleFilter}\n        value={filter}\n        className={css.inputFilter}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactList_contactsList__7leRd\",\"contactsItem\":\"ContactList_contactsItem__x8C9b\",\"contactName\":\"ContactList_contactName__wLcl6\",\"deleteBtn\":\"ContactList_deleteBtn__1dg25\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getVisibleContacts } from 'redux/contacts/selectors';\nimport 'boxicons';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={css.contactsList}>\n      {contacts.map(({ name, number, id }) => (\n        <li className={css.contactsItem} key={id}>\n          <p className={css.contactName}>{name + ': ' + number}</p>\n          <button\n            className={css.deleteBtn}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            <box-icon name=\"trash\" animation=\"tada-hover\"></box-icon>\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport Form from 'components/Forma/Form';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Phonebook</title>\n      <div>\n        <Form />\n        <title>Contacts</title>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n}\n"],"names":["selectFilter","state","filter","getVisibleContacts","contacts","items","selectContacts","normalizedFilter","toLowerCase","contact","name","includes","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","className","css","onSubmit","preventDefault","find","element","alert","addContact","type","placeholder","onChange","pattern","title","required","changeFilter","map","onClick","deleteContact","animation","Tasks","useEffect","fetchContacts"],"sourceRoot":""}